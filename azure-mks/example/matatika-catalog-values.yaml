# example.matatika.com values for matatika-catalog.

replicaCount: 1

image:
  # We are using --set specify a specific image version to override default ({{ .Release.appVersion }})
  #tag: latest

  name: matatika/catalog
#
# To use a private repository you'll need all of the following
#
#  private: true
#  name: matatika.azurecr.io/matatika-catalog
#  repository: matatika.azurecr.io
#  username: matatika
#  password: [we are using --set]
  pullPolicy: Always

appService:
  name: springboot
  type: ClusterIP
  #nodePool: nodepool
  httpPort: 80
  httpsPort: 443
  internalHttpPort: 8080
  # The namespace where our dataflow task pods will be created
  dataflowTasksNamespace: example-tasks
  dataflowTasksServiceAccountName: default
  # Securely sets AUTH0_CLIENT_SECRET environment, secure value set with deploy script
  auth0ClientSecret: PLACEHOLDER
  # Securely sets GITHUB_API_PRIVATE_KEY environment, secure value set with deploy script
  githubApiPrivateKey: PLACEHOLDER
  # Securely sets GITHUB_API_WORKSPACES_PRIVATE_KEY environment, secure value set with deploy script
  githubApiWorkspacesPrivateKey: PLACEHOLDER
  # Securely sets PERSISTENCE_WAREHOUSE_PASSWORD environment, secure value set with deploy script
  persistenceWarehousePass: PLACEHOLDER
  # Securely sets PERSISTENCE_CATALOG_PASSWORD environment, secure value set with deploy script
  persistenceCatalogPass: PLACEHOLDER
  # Securely sets MATATIKA_ES_ELASTIC_PASSWORD environment, secure value set with deploy script
  elasticSearchPassword: PLACEHOLDER
  # Securely sets MATATIKA_ENCRYPTOR_PASSWORD environment, secure value set with deploy script
  encryptorPassword: PLACEHOLDER
  environments:
    - name: REACT_APP_ENV
      value: "distribution"
    - name: APP_URL
      value: http://localhost:8080
    - name: APP_SERVER_URI
      value: http://localhost:8080/api  
    # See Ingress
    #- name: APP_URL
    #  value: https://example.matatika.com
    #- name: APP_SERVER_URI
    #  value: https://example.matatika.com/api  
    - name: JAVA_OPTS
      value: "-XX:MaxDirectMemorySize=64M -XX:MaxMetaspaceSize=240234K -XX:ReservedCodeCacheSize=240M -Xss1M -Xmx1079906K"
    - name: ACTIVE_PROFILES
      value: "default,deploy"
    - name: SPRING_CLOUD_KUBERNETES_ENABLED
      value: "true"
    - name: SPRING_CLOUD_LOCAL_ENABLED
      value: "false"
    # Disable elastic search
    - name: MATATIKA_ELASTICSEARCH_ENABLED
      value: "false"
    - name: MANAGEMENT_HEALTH_ELASTICSEARCH_ENABLED
      value: "false"
    # Disable logstash
    - name: MATATIKA_LOGSTASH_ENABLED
      value: "false"
    # Generate a 256-bit (32-char) secret key and set it here. This is used to generate access tokens for the Matatika App and API.
    - name: MATATIKA_AUTH_LOCAL_SECRET
      value: "matatikaauthlocalsecret_changeme"
    - name: PERSISTENCE_WAREHOUSE_URL
      value: "jdbc:postgresql://catalog-postgres-postgresql.example.svc.cluster.local:5432/matatika?ssl=false"
    - name: PERSISTENCE_WAREHOUSE_USERNAME
      value: "postgres"
    - name: PERSISTENCE_CATALOG_URL
      value: "jdbc:postgresql://catalog-postgres-postgresql.example.svc.cluster.local:5432/matatika?ssl=false"
    - name: PERSISTENCE_CATALOG_USERNAME
      value: "matatika"
    - name: MATATIKA_WORKSPACES_HOME
      value: /tmp

rbac:
  create: true

ingress:
  enabled: true
  # AZURE
  #className: webapprouting.kubernetes.azure.com
  # AWS
  className: alb
  paths:
    - /
  # Used to create Ingress record (should used with service.type: ClusterIP).
  hosts:
    - example.matatika.com
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
  tls:
    - hosts:
      - example.matatika.com

resources:
  requests:
    memory: 1Gi
    cpu: 1
  limits:
    memory: 3Gi
    cpu: 8

nodeSelector: {}

tolerations: []

affinity: {}
