# catalog-staging.matatika.com values for matatika-catalog.

replicaCount: 1

image:
# We are using --set specify a specific image version to override default ({{ .Release.appVersion }})
#tag: latest
#
# To use a private repository you'll need all of the following
#
  private: true
  name: matatika.azurecr.io/matatika-catalog
  repository: matatika.azurecr.io
  username: matatika
#  password: [we are using --set]
  pullPolicy: Always

appService:
  name: springboot
  type: ClusterIP
  nodePool: nodepool2
  httpPort: 80
  httpsPort: 443
  internalHttpPort: 8080
  # The namespace where our dataflow task pods will be created
  dataflowTasksNamespace: example-tasks
  dataflowTasksServiceAccountName: default
  # Securely sets AUTH0_CLIENT_SECRET environment, secure value set with deploy script
  auth0ClientSecret: PLACEHOLDER
  # Securely sets GITHUB_API_PRIVATE_KEY environment, secure value set with deploy script
  githubApiPrivateKey: PLACEHOLDER
  # Securely sets GITHUB_API_WORKSPACES_PRIVATE_KEY environment, secure value set with deploy script
  githubApiWorkspacesPrivateKey: PLACEHOLDER
  # Securely sets PERSISTENCE_WAREHOUSE_PASSWORD environment, secure value set with deploy script
  persistenceWarehousePass: PLACEHOLDER
  # Securely sets PERSISTENCE_CATALOG_PASSWORD environment, secure value set with deploy script
  persistenceCatalogPass: PLACEHOLDER
  # Securely sets MATATIKA_ES_ELASTIC_PASSWORD environment, secure value set with deploy script
  elasticSearchPassword: PLACEHOLDER
  # Securely sets MATATIKA_ENCRYPTOR_PASSWORD environment, secure value set with deploy script
  encryptorPassword: PLACEHOLDER
  environments:
    - name: JAVA_OPTS
      value: "-XX:MaxDirectMemorySize=64M -XX:MaxMetaspaceSize=240234K -XX:ReservedCodeCacheSize=240M -Xss1M -Xmx1079906K"
    - name: ACTIVE_PROFILES
      value: "default,deploy"
    - name: SPRING_CLOUD_KUBERNETES_ENABLED
      value: "true"
    - name: KUBERNETES_REQUEST_TIMEOUT
      value: "60000"
    - name: BERT_HOST
      value: "bert"
    - name: ELASTICSEARCH_HOST
      value: "matatika-search-master.example.svc.cluster.local"
    - name: ELASTICSEARCH_USER
      value: "elastic"
    - name: MATATIKA_LOGSTASH_ENDPOINT
      value: "example-matatika-logstash-logstash.example.svc.cluster.local:5000"
    - name: PERSISTENCE_WAREHOUSE_URL
      value: "jdbc:postgresql://catalog-postgres-postgresql.example.svc.cluster.local:5432/warehouse?ssl=false"
    - name: PERSISTENCE_WAREHOUSE_USERNAME
      value: "postgres"
    - name: PERSISTENCE_CATALOG_URL
      value: "jdbc:postgresql://catalog-postgres-postgresql.example.svc.cluster.local:5432/warehouse?ssl=false"
    - name: PERSISTENCE_CATALOG_USERNAME
      value: "postgres"
    - name: AUTH0_CLIENT_AUDIENCE
      value: "https://catalog-example.matatika.com/api"
    - name: APP_URL
      value: https://example.matatika.com

rbac:
  create: true

ingress:
  enabled: true
  paths:
    - /
  # Used to create Ingress record (should used with service.type: ClusterIP).
  hosts:
    - catalog.44b3fe4de4104e2d8e43.uksouth.aksapp.io
    - catalog-example.matatika.com
  annotations:
    kubernetes.io/ingress.class: addon-http-application-routing
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
  tls:
    - hosts:
      - catalog.44b3fe4de4104e2d8e43.uksouth.aksapp.io
      - catalog-example.matatika.com

resources:
  requests:
    memory: 1Gi
    cpu: 1
  limits:
    memory: 3Gi
    cpu: 8

nodeSelector: {}

tolerations: []

affinity: {}
