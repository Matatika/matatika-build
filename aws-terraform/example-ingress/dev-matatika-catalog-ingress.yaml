apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:eu-west-2:868651350637:certificate/b8cfc226-a9d8-4d44-9883-22886d60693c
    alb.ingress.kubernetes.io/healthcheck-path: /
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
    external-dns.alpha.kubernetes.io/hostname: dev.matatika.com
    kubernetes.io/ingress.class: alb
    meta.helm.sh/release-name: dev-matatika-catalog
    meta.helm.sh/release-namespace: dev
    nginx.ingress.kubernetes.io/proxy-body-size: 100m
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
  finalizers:
  - ingress.k8s.aws/resources
  generation: 2
  labels:
    app.kubernetes.io/instance: dev-matatika-catalog
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: matatika-catalog
    helm.sh/chart: matatika-catalog-0.1.0
  name: dev-matatika-catalog
  namespace: dev
spec:
  ingressClassName: alb
  rules:
  - host: dev.matatika.com
    http:
      paths:
      - backend:
          service:
            name: dev-matatika-catalog-springboot
            port:
              number: 80
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - dev.matatika.com
status:
  loadBalancer:
    ingress:
    - hostname: k8s-dev-devmatat-cbe1158eb6-697093403.eu-west-2.elb.amazonaws.com
